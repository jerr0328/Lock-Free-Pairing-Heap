Description of source files:


LFPairingHeap.java -> Our implementation of a lock-free pairing heap.

Benchmark.java -> Benchmarking harness for the pairing heap.
benchmark.py -> Internal tool for testing JVM settings.
BenchmarkSkipList.java -> Benchmarking harness of the skip list.
Dijkstra.java -> Dijkstra's algorithm implemented on lock-free pairing heaps (using a variable number of threads)
DijkstraSerial.java -> Dijkstra's algorithm implemented on Pairing heaps, but in a serial fashion.
DijkstraSkiplist.java -> Dijkstra's algorithm implemented on Skiplists.
Graph.java -> Adjacency list representation of a graph.
PHNode.java -> Representation of a pairing heap node.
GraphNode.java -> Representation of a graph node
GraphEdge.java -> Representation of a weighted graph edge.
RandomGraph.java -> Random graph generator.
SnapGraph.java -> Helper class for loading a graph from SNAP.
SnapGraphTest.java -> Tester for the snap class.
PairingHeapNode.java -> A node in a pairing heap
Rnd.java -> Random number generator